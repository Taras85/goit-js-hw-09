{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAMMC,EAAaC,SAASC,cAAc,WACpCC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBA0BzC,SAASG,EAAcC,EAAUC,GAC/B,IAAIC,EAAKC,KAAKC,SACRC,EAAgBH,EAAK,GACX,IAAII,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLJ,EAEFE,EAAQ,CAAEG,SAAAV,EAAUW,MAAAV,IAGpBO,EAAO,CAAEE,SAAAV,EAAUW,MAAAV,G,GAEpBA,E,IAGFW,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAAtB,GAASuB,OAAOC,QACd,uBAAwCC,OAAfP,EAAS,QAAkBO,OAAZN,EAAM,QAASM,OAAHf,IAEtDgB,QAAQC,IAAI,uBAAwCF,OAAfP,EAAS,QAAkBO,OAAZN,EAAM,QAASM,OAAHf,G,IAEjEkB,OAAM,SAAAP,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAAtB,GAASuB,OAAOM,QACd,sBAAuCJ,OAAfP,EAAS,QAAiBO,OAAXN,EAAM,OAAQM,OAAHf,IAEpDgB,QAAQC,IAAI,sBAAqCF,OAAfP,EAAS,QAAiBO,OAAXN,EAAM,OAAQM,OAAHf,G,IAhDlEL,EAAWyB,aAAa,OAAQ,KAChCxB,EAAUwB,aAAa,OAAQ,KAC/B5B,EAAW6B,iBAAiB,UAE5B,SAAkBC,GAChBA,EAAMC,iBAENP,QAAQC,IAAItB,GACZ,IAAIc,EAAQe,OAAOF,EAAMG,cAAc,GAAGC,OACtCC,EAAOH,OAAOF,EAAMG,cAAc,GAAGC,OACrCE,EAASJ,OAAOF,EAAMG,cAAc,GAAGC,OAE3CV,QAAQC,IAAIR,EAAOkB,EAAMC,GAEzB,IAAK,IAAIpB,EAAW,EAAGA,GAAYoB,EAAQpB,GAAY,EACrDX,EAAcW,EAAUC,GAExBO,QAAQC,IAAIR,EAAOD,GAEnBC,GAASkB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// step = '1000';\n\n// .setAttribute('step = '1000');\n\nconst formSubmit = document.querySelector('.form  ');\nconst inputDelay = document.querySelector('[name=\"delay\"]');\nconst inputStep = document.querySelector('[name=\"step\"]');\n// const buttonSubmit = formSubmit.querySelector('.form > button');\n\ninputDelay.setAttribute('step', 500);\ninputStep.setAttribute('step', 500);\nformSubmit.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  console.log(inputDelay);\n  let delay = Number(event.currentTarget[0].value);\n  let step = Number(event.currentTarget[1].value);\n  let amount = Number(event.currentTarget[2].value);\n\n  console.log(delay, step, amount);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay);\n\n    console.log(delay, position);\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  let qw = Math.random();\n  const shouldResolve = qw > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position} in ${delay}ms  ${qw}`\n      );\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms  ${qw}`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(\n        `❌ Rejected promise ${position} in ${delay}ms ${qw}`\n      );\n      console.log(`❌ Rejected promise ${position} in ${delay}ms ${qw}`);\n    });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formSubmit","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$createPromise","position1","delay1","qw","Math","random","shouldResolve","Promise","resolve","reject","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure","setAttribute","addEventListener","event","preventDefault","Number","currentTarget","value","step","amount"],"version":3,"file":"03-promises.430197c9.js.map"}