{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,MAAO,MACPC,SAAU,gBACVC,SAAU,OACVC,QAAS,IACTC,aAAa,IAGf,IAAMC,EAAaC,SAASC,cAAc,WACpCC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBAoC3C,SAASI,EAAcC,EAAUC,GAC/B,IAAIC,EAAcC,KAAKC,SACjBC,EAAgBH,EAAc,GACpB,IAAII,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLJ,EAEFE,EAAQ,CAAElB,SAAAW,EAAUU,MAAAT,IAGpBO,EAAO,CAAEnB,SAAAW,EAAUU,MAAAT,G,GAEpBA,E,IAGFU,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUqB,EAAKE,EAALF,MACjBzB,EAAAF,GAASG,OAAO2B,QACd,uBAAwCC,OAAfzB,EAAS,QAAkByB,OAAZJ,EAAM,QAAkBI,OAAZZ,IAEtDa,QAAQC,IACN,uBAAwCF,OAAfzB,EAAS,QAAkByB,OAAZJ,EAAM,QAAkBI,OAAZZ,G,IAGvDe,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUqB,EAAKE,EAALF,MAClBzB,EAAAF,GAASG,OAAOgC,QACd,sBAAuCJ,OAAfzB,EAAS,QAAiByB,OAAXJ,EAAM,OAAiBI,OAAZZ,IAEpDa,QAAQC,IACN,sBAAqCF,OAAfzB,EAAS,QAAiByB,OAAXJ,EAAM,OAAiBI,OAAZZ,G,IA7DxDN,EAAWuB,aAAa,OAAQ,KAChCvB,EAAWuB,aAAa,MAAO,GAC/BtB,EAAUsB,aAAa,OAAQ,KAC/BtB,EAAUsB,aAAa,MAAO,GAC9BrB,EAAYqB,aAAa,QAAS,GAClCrB,EAAYqB,aAAa,MAAO,GAEhC1B,EAAW2B,MAAMC,QAAU,OAC3B5B,EAAW2B,MAAME,IAAM,OACvB7B,EAAW2B,MAAMG,oBAAsB,2BACvC9B,EAAW2B,MAAMI,WAAa,MAE9B/B,EAAWgC,iBAAiB,UAE5B,SAAkBC,GAChBA,EAAMC,iBASN,IANA,IAAIjB,EAAQkB,OAAOF,EAAMG,cAAc,GAAGC,OACtCC,EAAOH,OAAOF,EAAMG,cAAc,GAAGC,OACrCE,EAASJ,OAAOF,EAAMG,cAAc,GAAGC,OAIlCzC,EAAW,EAAGA,GAAY2C,EAAQ3C,GAAY,EACrDU,EAAcV,EAAUqB,GAIxBA,GAASqB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  width: '30%',\n  position: 'center-center',\n  fontSize: '15px',\n  timeout: 5000,\n  backOverlay: true,\n});\n\nconst formSubmit = document.querySelector('.form  ');\nconst inputDelay = document.querySelector('[name=\"delay\"]');\nconst inputStep = document.querySelector('[name=\"step\"]');\nconst inputAmount = document.querySelector('[name=\"amount\"]');\n// const buttonSabmit = document.querySelector('.form button');\n\ninputDelay.setAttribute('step', 500);\ninputDelay.setAttribute('min', 0);\ninputStep.setAttribute('step', 500);\ninputStep.setAttribute('min', 0);\ninputAmount.setAttribute('value', 1);\ninputAmount.setAttribute('min', 1);\n\nformSubmit.style.display = 'grid';\nformSubmit.style.gap = '20px';\nformSubmit.style.gridTemplateColumns = 'repeat(auto-fill, 170px)';\nformSubmit.style.alignItems = 'end';\n\nformSubmit.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  // console.log(inputDelay);\n  let delay = Number(event.currentTarget[0].value);\n  let step = Number(event.currentTarget[1].value);\n  let amount = Number(event.currentTarget[2].value);\n\n  // console.log(delay, step, amount);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay);\n\n    // console.log(delay, position);\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  let checkNumber = Math.random();\n  const shouldResolve = checkNumber > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position} in ${delay}ms  ${checkNumber}`\n      );\n      console.log(\n        `✅ Fulfilled promise ${position} in ${delay}ms  ${checkNumber}`\n      );\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(\n        `❌ Rejected promise ${position} in ${delay}ms ${checkNumber}`\n      );\n      console.log(\n        `❌ Rejected promise ${position} in ${delay}ms ${checkNumber}`\n      );\n    });\n}\n"],"names":["$6JpON","parcelRequire","$parcel$interopDefault","Notify","init","width","position","fontSize","timeout","backOverlay","$ce04d3a99e08e73b$var$formSubmit","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position1","delay1","checkNumber","Math","random","shouldResolve","Promise","resolve","reject","setTimeout","delay","then","param","success","concat","console","log","catch","failure","setAttribute","style","display","gap","gridTemplateColumns","alignItems","addEventListener","event","preventDefault","Number","currentTarget","value","step","amount"],"version":3,"file":"03-promises.ee64d5d0.js.map"}